{"version":3,"sources":["components/Header/Header.js","components/Header/index.js","components/ControlContainer/ControlContainer.js","components/ControlContainer/index.js","components/OutputContainer/OutputContainer.js","components/OutputContainer/index.js","components/Toast/Toast.js","components/Toast/index.js","utils.js","components/ServiceContainer/index.js","components/ServiceContainer/ServiceContainer.js","hooks/useScript.js","App.js","serviceWorker.js","index.js"],"names":["Header","description","links","title","Tile","className","map","link","defaultProps","mapVoicesToDropdownItems","voices","sort","voiceA","voiceB","voice","colonIndex","indexOf","voicePersonName","substring","restOfDescription","label","name","id","ControlContainer","onSynthesize","useState","setVoices","selectedVoice","setSelectedVoice","text","setText","useDataApi","data","isLoading","isError","doFetch","useEffect","FormGroup","legendText","length","Dropdown","onChange","newModel","selectedItem","items","defaultText","ariaLabel","light","TextArea","labelText","placeholder","hideLabel","invalidText","value","evt","target","Button","disabled","kind","onClick","renderIcon","VolumeUp24Filled","OutputContainer","audioElementRef","controls","ref","Toast","caption","children","hideAfterFirstDisplay","hideCloseButton","iconDescription","lowContrast","onCloseButtonClick","role","subtitle","timeout","setId","hideToast","setHideToast","Math","random","toString","element","document","querySelector","undefined","window","localStorage","getItem","setItem","createError","ServiceContainer","error","setError","useRef","a","async","fetch","authResponse","json","authJson","ok","synthesize","accessToken","current","useScript","url","script","createElement","src","body","appendChild","removeChild","HEADER_LINKS","Link","key","rel","href","Launch16","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAIaA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,MAAvB,OACpB,kBAACC,EAAA,EAAD,CAAMC,UAAU,UACd,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,gBAAgBF,GAC9B,2BAAIF,IAEN,yBAAKI,UAAU,kBACb,yBAAKA,UAAU,gBAAgBH,EAAMI,KAAI,SAAAC,GAAI,OAAIA,SAWvDP,EAAOQ,aAAe,CACpBP,YAAa,GACbC,MAAO,GACPC,MAAO,IAGMH,IC3BAA,ED2BAA,E,4HEbTS,EAA2B,SAAAC,GAAM,OACrCA,EACGC,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOX,YAAcY,EAAOZ,eACrDK,KAAI,SAAAQ,GACH,IAAMC,EAAaD,EAAMb,YAAYe,QAAQ,KACvCC,EAAkBH,EAAMb,YAAYiB,UAAU,EAAGH,GACjDI,EAAoBL,EAAMb,YAAYiB,UAAUH,EAAa,GAC7DK,EAAK,UAAMH,EAAN,aAA0BH,EAAMO,KAAhC,cAA0CF,GAErD,MAAO,CACLG,GAAIR,EAAMO,KACVD,aAIKG,EAAmB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACxBC,mBAAS,IADe,mBAC7Cf,EAD6C,KACrCgB,EADqC,OAEVD,qBAFU,mBAE7CE,EAF6C,KAE9BC,EAF8B,OAG5BH,mBAAS,IAHmB,mBAG7CI,EAH6C,KAGvCC,EAHuC,OAKJC,IAtB1B,cAsBsD,CAC1ErB,OAAQ,KAN0C,0BAK3CsB,EAL2C,EAK3CA,KAAMC,EALqC,EAKrCA,UAAWC,EAL0B,EAK1BA,QAAWC,EALe,KAqBpD,OAZAC,qBAAU,WACRD,EA3BoB,eA4BpBT,EAAUM,EAAKtB,UACd,CAACsB,EAAMG,EAASD,EAASD,IAG5BG,qBAAU,WACJ1B,EAAO,IACTkB,EAAiBnB,EAAyBC,GAAQ,MAEnD,CAACA,IAGF,kBAACN,EAAA,EAAD,CAAMC,UAAU,qBACd,wBAAIA,UAAU,mBAAd,SACA,kBAACgC,EAAA,EAAD,CAAWC,WAAW,eACnBL,GAAgC,IAAlBvB,EAAO6B,SAAiBL,EACrC,kBAAC,IAAD,MAEA,kBAACM,EAAA,EAAD,CACElB,GAAG,uBACHF,MAAM,uBACNqB,SAAU,SAAAC,GACRd,EAAiBc,EAASC,eAE5BC,MAAOnC,EAAyBC,GAChCiC,aAAchB,GAAiBA,EAAcP,MAC7CyB,YAAY,uBACZC,UAAU,iCACVC,OAAK,KAIX,kBAACV,EAAA,EAAD,CAAWC,WAAW,sBACpB,kBAACU,EAAA,EAAD,CACE1B,GAAG,aACH2B,UAAU,aACVC,YAAY,2BACZC,WAAS,EACTC,YAAY,wBACZC,MAAOxB,EACPY,SAAU,SAAAa,GACRxB,EAAQwB,EAAIC,OAAOF,QAErBN,OAAK,KAGT,kBAACS,EAAA,EAAD,CACEC,UAAW9B,IAAkBE,EAC7B6B,KAAK,UACLC,QAAS,kBAAMnC,EAAaK,EAAMF,IAClCiC,WAAYC,KAJd,gBAgBNtC,EAAiBf,aAAe,CAC9BgB,aAAc,cAGDD,ICzGAA,EDyGAA,EEtGFuC,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChC,OACE,kBAAC3D,EAAA,EAAD,CAAMC,UAAU,oBACd,wBAAIA,UAAU,mBAAd,UACA,kBAACgC,EAAA,EAAD,CAAWC,WAAW,qBACpB,2BAAOjC,UAAU,eAAe2D,UAAQ,EAACC,IAAKF,GAA9C,qCACoC,uCADpC,kBAYRD,EAAgBtD,aAAe,CAC7BuD,gBAAiB,MAGJD,ICxBAA,EDwBAA,E,QEnBFI,EAAQ,SAAC,GAcf,IAbLC,EAaI,EAbJA,QACAC,EAYI,EAZJA,SACA/D,EAWI,EAXJA,UACAgE,EAUI,EAVJA,sBACAC,EASI,EATJA,gBACAC,EAQI,EARJA,gBACAb,EAOI,EAPJA,KACAc,EAMI,EANJA,YACAC,EAKI,EALJA,mBACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAzE,EACI,EADJA,MACI,EACgBsB,qBADhB,mBACGH,EADH,KACOuD,EADP,OAE8BpD,oBAAS,GAFvC,mBAEGqD,EAFH,KAEcC,EAFd,KAiCJ,OA7BA3C,qBAAU,WACRyC,EACEG,KAAKC,SACFC,SAAS,IACThE,UAAU,EAAG,IACd8D,KAAKC,SACFC,SAAS,IACThE,UAAU,EAAG,OAEnB,IAEHkB,qBAAU,WACR,IAAM+C,EAAUC,SAASC,cAAT,wBAAwC/D,IACpD6D,IACFA,EAAQ9E,WAAa,WAEtB,CAACiB,IAEJc,qBAAU,WAENiC,QACkBiB,WAAXC,aACwBD,WAAxBC,OAAOC,cAC8C,SAA5DD,OAAOC,aAAaC,QA3CS,4BA6C7BV,GAAa,KAEd,CAACV,IAEGS,EAAY,KACjB,kBAAC,IAAD,CACEX,QAASA,EACT9D,UAAS,uBAAkBiB,EAAlB,YAAwBjB,GACjCiE,gBAAiBA,EACjBC,gBAAiBA,EACjBb,KAAMA,EACNc,YAAaA,EACbC,mBAAoB,WAEhBJ,QACkBiB,WAAXC,aACwBD,WAAxBC,OAAOC,cAEdD,OAAOC,aAAaE,QA/DK,0BA+D+B,QAE1DjB,KAEFC,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTzE,MAAOA,GAENiE,IAqBPF,EAAM1D,aAAe,CACnB2D,QAAS,GACTC,SAAU,KACV/D,UAAW,GACXgE,uBAAuB,EACvBC,iBAAiB,EACjBC,gBAAiB,sBACjBb,KAAM,QACNc,aAAa,EACbC,mBAAoB,aACpBC,KAAM,QACNC,SAAU,GACVC,QAAS,EACTzE,MAAO,IAGM+D,IC/GAA,ED+GAA,EEjHFyB,EAAc,SAACxF,EAAOF,GACjC,MAAO,CACLE,QACAF,gBCFW2F,ECYiB,WAAO,IAAD,EACVnE,qBADU,mBAC7BoE,EAD6B,KACtBC,EADsB,KAEhC/B,EAAkBgC,iBAAO,MAuB7B,OACE,yBAAK1F,UAAU,qBACb,kBAAC,EAAD,CAAOqD,KAAK,OAAOiB,SA7BvB,yRA8BKkB,GACC,kBAAC,EAAD,CACEnC,KAAK,QACLvD,MAAO0F,EAAM1F,MACbwE,SAAUkB,EAAM5F,YAChBoE,uBAAuB,EACvBO,QAAS,IACTH,mBAAoB,WAClBqB,EAAS,SAIf,kBAAC,EAAD,CAAkBtE,aApCD,SAAOK,EAAMf,GAAb,iBAAAkF,EAAAC,OAAA,kEAAAD,EAAA,MAGEE,IAAM,cAHR,cAGnBC,EAHmB,kBAAAH,EAAA,MAIFG,EAAaC,QAJX,OAInBC,EAJmB,OAKdF,EAAaG,IAChBR,EAASH,EAfW,uBAeoBU,IAG1C,IACEE,IAAW,CACTC,YAAaH,EAASG,YACtBrB,QAASpB,EAAgB0C,QACzB5E,OACAf,MAAOA,EAAMQ,KAEf,MAAOuE,GACPC,EAASH,EAzBgB,uBAyBoBE,IAjB5B,wCAqCjB,kBAAC,EAAD,CAAiB9B,gBAAiBA,MCrCzB2C,EAfG,SAAAC,GAChBvE,qBAAU,WACR,IAAMwE,EAASxB,SAASyB,cAAc,UAOtC,OALAD,EAAOE,IAAMH,EACbC,EAAOX,OAAQ,EAEfb,SAAS2B,KAAKC,YAAYJ,GAEnB,WACLxB,SAAS2B,KAAKE,YAAYL,MAE3B,CAACD,KCAAO,EAAe,CACnB,kBAACC,EAAA,EAAD,CACE9G,UAAU,OACV+G,IAAI,WACJ7D,OAAO,SACP8D,IAAI,sBACJC,KAAK,+DAEL,uBAAGjH,UAAU,aAAb,iBACA,kBAAC,IAAD,CAAQA,UAAU,eAEpB,kBAAC8G,EAAA,EAAD,CACE9G,UAAU,OACV+G,IAAI,YACJ7D,OAAO,SACP8D,IAAI,sBACJC,KAAK,0FAEL,uBAAGjH,UAAU,aAAb,iBACA,kBAAC,IAAD,CAAYA,UAAU,eAExB,kBAAC8G,EAAA,EAAD,CACE9G,UAAU,OACV+G,IAAI,cACJ7D,OAAO,SACP8D,IAAI,sBACJC,KAAK,yEAEL,uBAAGjH,UAAU,aAAb,UACA,kBAAC,IAAD,CAAcA,UAAU,eAE1B,kBAAC8G,EAAA,EAAD,CACE9G,UAAU,uBACV+G,IAAI,iBACJ7D,OAAO,SACP8D,IAAI,sBACJC,KAAK,irBAEL,kBAAC9D,EAAA,EAAD,CAAQnD,UAAU,cAAcqD,KAAK,WAAWE,WAAY2D,KAA5D,+BAGA,kBAAC,IAAD,CAAYlH,UAAU,gBAqBXmH,EAjBI,WAKjB,OAJAd,EACE,2GAIA,yBAAKrG,UAAU,iBACb,kBAAC,EAAD,CACEJ,YAtDN,iKAuDMC,MAAOgH,EACP/G,MA1Da,0BA4Df,kBAAC,EAAD,QC3DcsH,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1C,SAAS2C,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.50ef4b77.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tile } from 'carbon-components-react';\n\nexport const Header = ({ description, links, title }) => (\n  <Tile className=\"header\">\n    <div className=\"title-container\">\n      <h2 className=\"header-title\">{title}</h2>\n      <p>{description}</p>\n    </div>\n    <div className=\"link-container\">\n      <div className=\"link-wrapper\">{links.map(link => link)}</div>\n    </div>\n  </Tile>\n);\n\nHeader.propTypes = {\n  description: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  description: '',\n  links: [],\n  title: '',\n};\n\nexport default Header;\n","import Header from './Header';\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport VolumeUp24Filled from '@carbon/icons-react/lib/volume--up--filled/24';\nimport {\n  Button,\n  Dropdown,\n  DropdownSkeleton,\n  FormGroup,\n  TextArea,\n  Tile,\n} from 'carbon-components-react';\nimport useDataApi from 'use-data-api';\n\nconst VOICES_ENDPOINT = '/api/voices';\n\nconst mapVoicesToDropdownItems = voices =>\n  voices\n    .sort((voiceA, voiceB) => voiceA.description > voiceB.description)\n    .map(voice => {\n      const colonIndex = voice.description.indexOf(':');\n      const voicePersonName = voice.description.substring(0, colonIndex);\n      const restOfDescription = voice.description.substring(colonIndex + 1);\n      const label = `${voicePersonName} (${voice.name}): ${restOfDescription}`;\n\n      return {\n        id: voice.name,\n        label,\n      };\n    });\n\nexport const ControlContainer = ({ onSynthesize }) => {\n  const [voices, setVoices] = useState([]);\n  const [selectedVoice, setSelectedVoice] = useState();\n  const [text, setText] = useState('');\n\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(VOICES_ENDPOINT, {\n    voices: [],\n  });\n\n  useEffect(() => {\n    doFetch(VOICES_ENDPOINT);\n    setVoices(data.voices);\n  }, [data, doFetch, isError, isLoading]);\n\n  // Default to initial voice once all voices are loaded.\n  useEffect(() => {\n    if (voices[0]) {\n      setSelectedVoice(mapVoicesToDropdownItems(voices)[0]);\n    }\n  }, [voices]);\n\n  return (\n    <Tile className=\"control-container\">\n      <h3 className=\"container-title\">Input</h3>\n      <FormGroup legendText=\"Voice model\">\n        {isLoading || (voices.length === 0 && !isError) ? (\n          <DropdownSkeleton />\n        ) : (\n          <Dropdown\n            id=\"voice-model-dropdown\"\n            label=\"Select a voice model\"\n            onChange={newModel => {\n              setSelectedVoice(newModel.selectedItem);\n            }}\n            items={mapVoicesToDropdownItems(voices)}\n            selectedItem={selectedVoice && selectedVoice.label}\n            defaultText=\"Select a voice model\"\n            ariaLabel=\"Voice model selection dropdown\"\n            light\n          />\n        )}\n      </FormGroup>\n      <FormGroup legendText=\"Text to synthesize\">\n        <TextArea\n          id=\"text-input\"\n          labelText=\"Text input\"\n          placeholder=\"Enter text to synthesize\"\n          hideLabel\n          invalidText=\"Invalid text provided\"\n          value={text}\n          onChange={evt => {\n            setText(evt.target.value);\n          }}\n          light\n        />\n      </FormGroup>\n      <Button\n        disabled={!selectedVoice || !text}\n        kind=\"primary\"\n        onClick={() => onSynthesize(text, selectedVoice)}\n        renderIcon={VolumeUp24Filled}\n      >\n        Synthesize\n      </Button>\n    </Tile>\n  );\n};\n\nControlContainer.propTypes = {\n  onSynthesize: PropTypes.func,\n};\n\nControlContainer.defaultProps = {\n  onSynthesize: () => {},\n};\n\nexport default ControlContainer;\n","import ControlContainer from './ControlContainer';\nexport default ControlContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Tile } from 'carbon-components-react';\n\nexport const OutputContainer = ({ audioElementRef }) => {\n  return (\n    <Tile className=\"output-container\">\n      <h3 className=\"container-title\">Output</h3>\n      <FormGroup legendText=\"Synthesized audio\">\n        <audio className=\"audio-output\" controls ref={audioElementRef}>\n          Your browser does not support the <code>audio</code> element :(\n        </audio>\n      </FormGroup>\n    </Tile>\n  );\n};\n\nOutputContainer.propTypes = {\n  audioElementRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n};\n\nOutputContainer.defaultProps = {\n  audioElementRef: null,\n};\n\nexport default OutputContainer;\n","import OutputContainer from './OutputContainer';\nexport default OutputContainer;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastNotification } from 'carbon-components-react';\n\nconst NOTIFICATION_HAS_BEEN_SEEN = 'notificationHasBeenSeen';\n\nexport const Toast = ({\n  caption,\n  children,\n  className,\n  hideAfterFirstDisplay,\n  hideCloseButton,\n  iconDescription,\n  kind,\n  lowContrast,\n  onCloseButtonClick,\n  role,\n  subtitle,\n  timeout,\n  title,\n}) => {\n  const [id, setId] = useState();\n  const [hideToast, setHideToast] = useState(false);\n\n  useEffect(() => {\n    setId(\n      Math.random()\n        .toString(36)\n        .substring(2, 15) +\n        Math.random()\n          .toString(36)\n          .substring(2, 15),\n    );\n  }, []);\n\n  useEffect(() => {\n    const element = document.querySelector(`.custom-toast-${id}`);\n    if (element) {\n      element.className += 'enter';\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      hideAfterFirstDisplay &&\n      typeof window !== undefined &&\n      typeof window.localStorage !== undefined &&\n      window.localStorage.getItem(NOTIFICATION_HAS_BEEN_SEEN) === 'true'\n    ) {\n      setHideToast(true);\n    }\n  }, [hideAfterFirstDisplay]);\n\n  return hideToast ? null : (\n    <ToastNotification\n      caption={caption}\n      className={`custom-toast-${id} ${className}`}\n      hideCloseButton={hideCloseButton}\n      iconDescription={iconDescription}\n      kind={kind}\n      lowContrast={lowContrast}\n      onCloseButtonClick={() => {\n        if (\n          hideAfterFirstDisplay &&\n          typeof window !== undefined &&\n          typeof window.localStorage !== undefined\n        ) {\n          window.localStorage.setItem(NOTIFICATION_HAS_BEEN_SEEN, 'true');\n        }\n        onCloseButtonClick();\n      }}\n      role={role}\n      subtitle={subtitle}\n      timeout={timeout}\n      title={title}\n    >\n      {children}\n    </ToastNotification>\n  );\n};\n\nToast.propTypes = {\n  caption: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  hideAfterFirstDisplay: PropTypes.bool,\n  hideCloseButton: PropTypes.bool,\n  iconDescription: PropTypes.string,\n  kind: PropTypes.string,\n  lowContrast: PropTypes.bool,\n  onCloseButtonClick: PropTypes.func,\n  role: PropTypes.string,\n  subtitle: PropTypes.string,\n  timeout: PropTypes.number,\n  title: PropTypes.string,\n};\n\nToast.defaultProps = {\n  caption: '',\n  children: null,\n  className: '',\n  hideAfterFirstDisplay: true,\n  hideCloseButton: false,\n  iconDescription: 'closes notification',\n  kind: 'error',\n  lowContrast: false,\n  onCloseButtonClick: () => {},\n  role: 'alert',\n  subtitle: '',\n  timeout: 0,\n  title: '',\n};\n\nexport default Toast;\n","import Toast from './Toast';\n\nexport default Toast;\n","export const createError = (title, description) => {\n  return {\n    title,\n    description,\n  };\n};\n","import ServiceContainer from './ServiceContainer';\nexport default ServiceContainer;\n","import React, { useRef, useState } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport synthesize from 'watson-speech/text-to-speech/synthesize';\nimport ControlContainer from '../ControlContainer';\nimport OutputContainer from '../OutputContainer';\nimport Toast from '../Toast';\nimport { createError } from '../../utils';\n\nconst TOKEN_ERROR_TITLE = 'Authentication error';\nconst SYNTHESIZE_ERROR_TITLE = 'Text synthesis error';\nconst GDPR_DISCLAIMER =\n  'This system is for demonstration purposes only and is not intended to process Personal Data. No Personal Data is to be entered into this system as it may not have the necessary controls in place to meet the requirements of the General Data Protection Regulation (EU) 2016/679.';\n\nexport const ServiceContainer = () => {\n  const [error, setError] = useState();\n  let audioElementRef = useRef(null);\n\n  const onSynthesize = async (text, voice) => {\n    let authResponse;\n    let authJson;\n    authResponse = await fetch('/api/auth');\n    authJson = await authResponse.json();\n    if (!authResponse.ok) {\n      setError(createError(TOKEN_ERROR_TITLE, authJson));\n    }\n\n    try {\n      synthesize({\n        accessToken: authJson.accessToken,\n        element: audioElementRef.current,\n        text,\n        voice: voice.id,\n      });\n    } catch (error) {\n      setError(createError(SYNTHESIZE_ERROR_TITLE, error));\n    }\n  };\n\n  return (\n    <div className=\"service-container\">\n      <Toast kind=\"info\" subtitle={GDPR_DISCLAIMER} />\n      {error && (\n        <Toast\n          kind=\"error\"\n          title={error.title}\n          subtitle={error.description}\n          hideAfterFirstDisplay={false}\n          timeout={5000}\n          onCloseButtonClick={() => {\n            setError(null);\n          }}\n        />\n      )}\n      <ControlContainer onSynthesize={onSynthesize} />\n      <OutputContainer audioElementRef={audioElementRef} />\n    </div>\n  );\n};\n\nexport default ServiceContainer;\n","import { useEffect } from 'react';\n\nconst useScript = url => {\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [url]);\n};\n\nexport default useScript;\n","import React from 'react';\nimport { Button, Link } from 'carbon-components-react';\nimport { default as Api124 } from '@carbon/icons-react/lib/API--1/24';\nimport Document24 from '@carbon/icons-react/lib/document/24';\nimport IbmCloud24 from '@carbon/icons-react/lib/ibm-cloud/24';\nimport Launch16 from '@carbon/icons-react/lib/launch/16';\nimport LogoGithub24 from '@carbon/icons-react/lib/logo--github/24';\nimport Header from './components/Header';\nimport ServiceContainer from './components/ServiceContainer';\nimport useScript from './hooks/useScript';\n\nconst HEADER_TITLE = 'Watson Text to Speech';\nconst HEADER_DESCRIPTION =\n  'The Watson Text to Speech service understands text and natural language to generate synthesized audio output complete with appropriate cadence and intonation.';\nconst HEADER_LINKS = [\n  <Link\n    className=\"link\"\n    key=\"api-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://cloud.ibm.com/apidocs/text-to-speech/text-to-speech\"\n  >\n    <p className=\"link-text\">API reference</p>\n    <Api124 className=\"link-icon\" />\n  </Link>,\n  <Link\n    className=\"link\"\n    key=\"docs-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://cloud.ibm.com/docs/services/text-to-speech?topic=text-to-speech-gettingStarted\"\n  >\n    <p className=\"link-text\">Documentation</p>\n    <Document24 className=\"link-icon\" />\n  </Link>,\n  <Link\n    className=\"link\"\n    key=\"github-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://github.com/watson-developer-cloud/text-to-speech-code-pattern\"\n  >\n    <p className=\"link-text\">GitHub</p>\n    <LogoGithub24 className=\"link-icon\" />\n  </Link>,\n  <Link\n    className=\"link getting-started\"\n    key=\"ibm-cloud-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://cloud.ibm.com/registration?target=%2Fcatalog%2Fservices%text-to-speech%3FhideTours%3Dtrue%26cm_mmc%3D-_-Watson%2BCore_Watson%2BCore%2B-%2BPlatform-_-WW_WW-_-wdc-ref%26cm_mmc%3D-_-Watson%2BCore_Watson%2BCore%2B-%2BPlatform-_-WW_WW-_-wdc-ref%26cm_mmca1%3D000000OF%26cm_mmca2%3D10000409&_ga=2.158846578.918027017.1572271296-1405764752.1539884377&_gac=1.250083700.1571850605.Cj0KCQjw3JXtBRC8ARIsAEBHg4m4g1PSkKQRoI6YUe4A-6ysul0ziiWU0DVbqlbWAQpq3721u-bxkd0aAkV3EALw_wcB&cm_mc_uid=83381689395615475202389&cm_mc_sid_50200000=82214471572470185115&cm_mc_sid_52640000=21949701572470185117&cm_mmc=Earned-_-Watson%20Core%20-%20Platform-_-WW_WW-_-intercom&cm_mmca1=000000OF&cm_mmca2=10000409\"\n  >\n    <Button className=\"link-button\" kind=\"tertiary\" renderIcon={Launch16}>\n      Start for free on IBM Cloud\n    </Button>\n    <IbmCloud24 className=\"link-icon\" />\n  </Link>,\n];\n\nexport const App = () => {\n  useScript(\n    'https://cdn.jsdelivr.net/gh/watson-developer-cloud/watson-developer-cloud.github.io@master/analytics.js',\n  );\n\n  return (\n    <div className=\"app-container\">\n      <Header\n        description={HEADER_DESCRIPTION}\n        links={HEADER_LINKS}\n        title={HEADER_TITLE}\n      />\n      <ServiceContainer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}